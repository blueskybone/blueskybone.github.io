<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on blog</title>
    <link>https://blueskybone.github.io/</link>
    <description>Recent content in Home on blog</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 27 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://blueskybone.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>android-screenshot-without-root</title>
      <link>https://blueskybone.github.io/post/android-screenshot/</link>
      <pubDate>Sun, 27 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://blueskybone.github.io/post/android-screenshot/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;Introduction&lt;/h3&gt;&#xA;&lt;p&gt;提供一种不用反射无需root的方法，在安卓中实现应用外截屏。&lt;/p&gt;&#xA;&lt;p&gt;谷歌并没有开放截屏的API，其他各种方法要么用反射触发系统截屏，要么就是我看不懂的需要root的方法。想要用原生android的方法截屏只能用一种繁琐的办法。&lt;/p&gt;&#xA;&lt;h3 id=&#34;原理&#34;&gt;原理：&lt;/h3&gt;&#xA;&lt;p&gt;首先在安卓应用内部截屏，取出Activity的UI层缓冲即可。但是要取应用外部的缓冲层怎么做呢？我们想到的歪门邪道就是创建一个透明的Activity覆盖在其他应用上，然后再按照原来的方法取出Activity的缓冲，这样通过这种透明的方式把下层的画面信息给录进来了，曲线救国达到在应用外截图的目的。&lt;/p&gt;&#xA;&lt;h3 id=&#34;流程分解&#34;&gt;流程分解：&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;动态获取录屏权限（保存此Intent）&lt;/li&gt;&#xA;&lt;li&gt;使用该Intent创建MediaProjection。&lt;/li&gt;&#xA;&lt;li&gt;启动一个透明的Activity&lt;/li&gt;&#xA;&lt;li&gt;启动一个前台服务Notification显式提示用户当前正在获取屏幕。（谷歌标准如此要求，不然会报错）&lt;/li&gt;&#xA;&lt;li&gt;使用MediaProjection创建VirtualDisplay&lt;/li&gt;&#xA;&lt;li&gt;创建ImageReader，获取图片缓冲（实际上需要的图片）&lt;/li&gt;&#xA;&lt;li&gt;释放资源：VirtualDisplay，ImageReader。（不要释放MediaProjection，一旦释放只能重新动态获取录屏权限，而不能用保存的Intent来生成，此改动疑似A14版本开始生效，以前可以通过保存intent重复创建MediaProjection，部分过时博客依然采用此方法。）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;实现细节&#34;&gt;实现细节：&lt;/h3&gt;&#xA;&lt;p&gt;因为总要开启一个Service用来提示用户，所以整个过程托管在一个Service实现，包括MediaProjection的存储。服务自杀通过定时器完成。每次需要使用截图时Start Service即可。&lt;/p&gt;&#xA;&lt;h3 id=&#34;demo&#34;&gt;DEMO&lt;/h3&gt;&#xA;&lt;p&gt;github demo: &lt;a href=&#34;https://github.com/blueskybone/ScreenshotDemo&#34;&gt;https://github.com/blueskybone/ScreenshotDemo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>docker compose</title>
      <link>https://blueskybone.github.io/post/docker-compose/</link>
      <pubDate>Sat, 12 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://blueskybone.github.io/post/docker-compose/</guid>
      <description>&lt;h3 id=&#34;proxy配置&#34;&gt;proxy配置：&lt;/h3&gt;&#xA;&lt;p&gt;不要使用powershell来配置proxy，使用cmd。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set http_proxy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://localhost:8080&amp;#34;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#改成你的端口号&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set https_proxy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://localhost:8080&amp;#34;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#75715e&#34;&gt;#改成你的端口号&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不设置代理，docker build的时候容易卡在pull环境阶段。&lt;/p&gt;&#xA;&lt;h3 id=&#34;换源&#34;&gt;换源：&lt;/h3&gt;</description>
    </item>
    <item>
      <title>clash for linux</title>
      <link>https://blueskybone.github.io/post/clash-for-linux/</link>
      <pubDate>Fri, 11 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://blueskybone.github.io/post/clash-for-linux/</guid>
      <description>&lt;p&gt;clash for linux 下载及使用&lt;/p&gt;&#xA;&lt;p&gt;原仓库跑路了，github有人传了备份。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/Elegycloud/clash-for-linux-backup&#34;&gt;https://github.com/Elegycloud/clash-for-linux-backup&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wnlen/clash-for-linux&#34;&gt;https://github.com/wnlen/clash-for-linux&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## clone&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/Elegycloud/clash-for-linux-backup.git clash-for-linux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/wnlen/clash-for-linux.git&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## edit&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd clash-for-linux&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim .env&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## 然后改CLASH_URL字段换成你的订阅地址&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;## start&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo bash start.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;source /etc/profile.d/clash.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;proxy_on&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其他命令见原仓库的readme&lt;/p&gt;</description>
    </item>
    <item>
      <title>WSL2 installation and migration</title>
      <link>https://blueskybone.github.io/post/wsl2%E5%AE%89%E8%A3%85%E5%8F%8A%E8%BF%81%E7%A7%BB/</link>
      <pubDate>Thu, 23 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://blueskybone.github.io/post/wsl2%E5%AE%89%E8%A3%85%E5%8F%8A%E8%BF%81%E7%A7%BB/</guid>
      <description>&lt;p&gt;自用。&lt;/p&gt;&#xA;&lt;p&gt;wsl2的官方一键式安装直接打两行命令从microsofy store下载安装就结束了，但通常我们连不上Microsoft Store。所以提供一个手动下载并安装的路径。&lt;/p&gt;&#xA;&lt;p&gt;另外安装WSL的虚拟硬盘默认是装到C盘，但C盘快爆了，还需要手动迁移到D盘。&lt;/p&gt;&#xA;&lt;p&gt;主要是今天终端开Ubuntu突然发现Hyper-v没了，然后一通操作数据全寄了。不过无所谓没啥重要的东西，重新装一遍。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/woods1815/p/15645611.html&#34;&gt;家庭版win10安装hyper-v&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;手动安装步骤&#34;&gt;手动安装步骤&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/windows/wsl/install-manual&#34;&gt;微软官方教程&lt;/a&gt; 安装WSL2的前置设置（开启功能，查看配置）到下载发行版之前的部分只需要看官方的教程。&lt;/p&gt;&#xA;&lt;p&gt;假设已经完成了前置设置。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-下载发行版&#34;&gt;1. 下载发行版&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如果 Microsoft Store 应用不可用，可使用以下链接来下载并手动安装 Linux 发行版：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://aka.ms/wslubuntu&#34;&gt;Ubuntu&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://wslstorestorage.blob.core.windows.net/wslblob/Ubuntu2404-240425.AppxBundle&#34;&gt;Ubuntu 24.04&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://aka.ms/wslubuntu2204&#34;&gt;Ubuntu 22.04 LTS&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://aka.ms/wslubuntu2004&#34;&gt;Ubuntu 20.04&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;官方页面还有其他发行版。我使用Ubuntu 22.04的版本&lt;/p&gt;&#xA;&lt;h3 id=&#34;2安装发行版&#34;&gt;2.安装发行版&lt;/h3&gt;&#xA;&lt;p&gt;下载完成后的文件 &lt;code&gt;Ubuntu2204-221101.AppxBundle&lt;/code&gt; ，后缀AppxBundle指定windows的应用安装程序打开文件，双击启动安装程序。安装完成后选择打开，或者手动打开Ubuntu.exe，路径在\AppData\Local\Microsoft\WindowsApps下。&lt;/p&gt;&#xA;&lt;p&gt;打开后输用户名密码，完成安装。&lt;/p&gt;&#xA;&lt;p&gt;此时 &lt;code&gt;wsl --list --verbose&lt;/code&gt; 已经可以检测到注册的ubuntu系统。&lt;/p&gt;&#xA;&lt;h2 id=&#34;迁移到d盘&#34;&gt;迁移到D盘&lt;/h2&gt;&#xA;&lt;p&gt;随着系统的使用WSL的占用会变得越来越大，对空间比较紧张的机器来说C盘的空间是寸土寸金的，这里通过wsl的备份与迁移的功能把它的虚拟硬盘空间迁移到D盘。（虽然微软提供这个功能的本意可能就只是备份和还原，比如换机器啊，机器坏了的情况等等）&lt;/p&gt;&#xA;&lt;h3 id=&#34;关闭虚拟机&#34;&gt;关闭虚拟机&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt; wsl --list --verbose&lt;/code&gt; 查看虚拟机名称和状态，返回结果像 &lt;code&gt;Ubuntu    Running         2&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;wsl --shutdown Ubuntu&lt;/code&gt; 关闭虚拟机&lt;/p&gt;&#xA;&lt;h3 id=&#34;迁移到d盘-1&#34;&gt;迁移到D盘&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;wsl --export Ubuntu D:\Ubuntu_WSL\Ubuntu.tar&lt;/code&gt; 确定在目标路径看到备份文件后，&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;wsl --unregister Ubuntu&lt;/code&gt; 注销并卸载WSL 发行版（操作不可逆，确保已有备份文件）&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;wsl --import Ubuntu D:\Ubuntu_WSL D:\Ubuntu_WSL\Ubuntu.tar&lt;/code&gt; 恢复到D盘，此时可以在目标目录下看到 &lt;code&gt;ext4.vhdx&lt;/code&gt; 这是虚拟硬盘映像文件。迁移完成。&lt;/p&gt;</description>
    </item>
    <item>
      <title>android-post</title>
      <link>https://blueskybone.github.io/post/android-post/</link>
      <pubDate>Wed, 12 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://blueskybone.github.io/post/android-post/</guid>
      <description>&lt;p&gt;Solutions to some minor problems in Android development.&lt;/p&gt;&#xA;&lt;h2 id=&#34;collapse-quicksetting-panel&#34;&gt;collapse quicksetting panel&lt;/h2&gt;&#xA;&lt;p&gt;instead of using StartActivityAndCollapse(), simply invoke a empty Dialog can touch the same effect.&lt;/p&gt;&#xA;&lt;h2 id=&#34;filter-logcat-in-android-studio&#34;&gt;filter logcat in Android Studio&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;package:mine -tag=:gralloc4&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>fMRI tools quick usage</title>
      <link>https://blueskybone.github.io/post/fmri-tool-quick-usage/</link>
      <pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate>
      <guid>https://blueskybone.github.io/post/fmri-tool-quick-usage/</guid>
      <description>&lt;h3 id=&#34;dcm2niix&#34;&gt;dcm2niix&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;dcm2niix -f {filename} {dirname}&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;\MRIcroGL\Resources\dcm2niix.exe -f {output_name} -p y -z y {input_dir}&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;官方的dcm2niix对某些dcm文件无法使用，用MRIcroGL路径下的dcm2niix。&lt;/p&gt;&#xA;&lt;p&gt;tips: dcm2niix不能使用多线程（显示进程状态D休眠，可能由于磁盘IO死锁引起，不确定，等待测试）&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;python：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;output_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;E:\FunNii_SCZ&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;system(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mkdir -p &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(output_path))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;base_path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;E:\FunRaw_SCZ&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; sub_name &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(base_path):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    subject &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; base_path &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; sub_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    subject_out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; output_path &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sub_&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; sub_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;system(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mkdir -p &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(subject_out))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; seq &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir(subject):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        input_dir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; subject &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; seq&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;system(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;D:\matlab_toolbox\MRIcroGL\Resources\dcm2niix.exe -f &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; -p y -z y &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;sub_name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, input_dir))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;system(&lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;move &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(&lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;input_dir&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;sub_name&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.nii.gz&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;{&lt;/span&gt;subject_out&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;bat代码未测试：(generated by Chatgpt3.5 converted from Python code above.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>image-test</title>
      <link>https://blueskybone.github.io/post/image-test/</link>
      <pubDate>Sun, 28 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://blueskybone.github.io/post/image-test/</guid>
      <description>&lt;h1 id=&#34;hotline-miami--wrong-number&#34;&gt;HOTLINE MIAMI : WRONG NUMBER&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://blueskybone.github.io/images/50_blessings.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>text-test</title>
      <link>https://blueskybone.github.io/post/text-test/</link>
      <pubDate>Thu, 01 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://blueskybone.github.io/post/text-test/</guid>
      <description>&lt;p&gt;聞いたところによれば「大暮はもう歳だしこれで引退して余生を過ごすらしいぜ、なんて囁かれている」らしい、です。そうなれればいいな、なんて思いつつ、現実はそんな甘くはないし僕自身やりたいことは山積みで。化の連載が終わった後も、5年前からの仕事を仕上げてる途中で、結局全然休めていませんし。これが終わったら、少し体と心をクリアにして、今年の終わり頃には連載をどこかで始めるつもりです。でも、今はまだ完全なニュートラルで、具体的には何ひとつ決まってません。ちなみに僕のスパンで考えると、今年終わり頃に連載というのはもう結構ギリで、夏には作業始めないと間に合わないんですよね。本音を言えば1年ぐらい休みたいところですが、それやるともう次の漫画を描ける気がしない。僕はきっとサメとかマグロと同じで、泳ぎ続けないと漫画家として死んでしまう生き物なので。ぼちぼちと構想練りながら相変わらず漫画のことばっかり考えています。それもまた幸せですし、恵まれているんだと思います。(グレ吉)&lt;/p&gt;</description>
    </item>
    <item>
      <title>learn you haskell</title>
      <link>https://blueskybone.github.io/post/learnhaskell/</link>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
      <guid>https://blueskybone.github.io/post/learnhaskell/</guid>
      <description>&lt;p&gt;教材：&lt;a href=&#34;http://learnyouahaskell.com/&#34;&gt;learnyouahaskell&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;环境：&lt;a href=&#34;https://www.haskell.org/ghc/download_ghc_9_2_3.html#windows64&#34;&gt;Windows-GHC-9.23-Download&lt;/a&gt;  only need download GHC for windows cmd.&lt;/p&gt;&#xA;&lt;p&gt;International week course&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
